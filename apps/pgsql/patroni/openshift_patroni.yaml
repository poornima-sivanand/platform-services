apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"app":"patroni","app.kubernetes.io/component":"database","app.kubernetes.io/instance":"patroni","app.kubernetes.io/managed-by":"template","app.kubernetes.io/name":"patroni","app.kubernetes.io/version":"10","cluster-name":"patroni","phase":"deploy"},"name":"patroni-master","namespace":"s4g19x-poornima-sivanand-openshift201-may2019-dev"},"spec":{"ports":[{"port":5432,"protocol":"TCP","targetPort":5432}],"selector":{"app.kubernetes.io/name":"patroni","cluster-name":"patroni","role":"master"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: 2019-05-28T21:02:05Z
    labels:
      app: patroni
      app.kubernetes.io/component: database
      app.kubernetes.io/instance: patroni
      app.kubernetes.io/managed-by: template
      app.kubernetes.io/name: patroni
      app.kubernetes.io/version: "10"
      cluster-name: patroni
      phase: deploy
    name: patroni-master
    namespace: s4g19x-poornima-sivanand-openshift201-may2019-dev
    resourceVersion: "796667489"
    selfLink: /api/v1/namespaces/s4g19x-poornima-sivanand-openshift201-may2019-dev/services/patroni-master
    uid: d91a7b2f-818b-11e9-bf26-0050568379a2
  spec:
    clusterIP: 172.50.17.235
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app.kubernetes.io/name: patroni
      cluster-name: patroni
      role: master
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"creationTimestamp":null,"generation":3,"labels":{"app":"patroni","app.kubernetes.io/component":"database","app.kubernetes.io/instance":"patroni","app.kubernetes.io/managed-by":"template","app.kubernetes.io/name":"patroni","app.kubernetes.io/version":"10","cluster-name":"patroni","phase":"deploy"},"name":"patroni","namespace":"s4g19x-poornima-sivanand-openshift201-may2019-dev"},"spec":{"podManagementPolicy":"OrderedReady","replicas":3,"revisionHistoryLimit":10,"selector":{"matchLabels":{"statefulset":"patroni"}},"serviceName":"patroni","template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/name":"patroni","cluster-name":"patroni","statefulset":"patroni"}},"spec":{"affinity":{"podAntiAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"labelSelector":{"matchExpressions":[{"key":"statefulset","operator":"In","values":["patroni"]}]},"topologyKey":"kubernetes.io/hostname"}]}},"containers":[{"env":[{"name":"POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"PATRONI_KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"PATRONI_KUBERNETES_LABELS","value":"{\"cluster-name\": \"patroni\", \"app.kubernetes.io/name\": \"patroni\"}"},{"name":"PATRONI_SUPERUSER_USERNAME","valueFrom":{"secretKeyRef":{"key":"superuser-username","name":"patroni"}}},{"name":"PATRONI_SUPERUSER_PASSWORD","valueFrom":{"secretKeyRef":{"key":"superuser-password","name":"patroni"}}},{"name":"PATRONI_REPLICATION_USERNAME","valueFrom":{"secretKeyRef":{"key":"replication-username","name":"patroni"}}},{"name":"PATRONI_REPLICATION_PASSWORD","valueFrom":{"secretKeyRef":{"key":"replication-password","name":"patroni"}}},{"name":"APP_USER","valueFrom":{"secretKeyRef":{"key":"app-db-username","name":"patroni"}}},{"name":"APP_PASSWORD","valueFrom":{"secretKeyRef":{"key":"app-db-password","name":"patroni"}}},{"name":"APP_DATABASE","valueFrom":{"secretKeyRef":{"key":"app-db-name","name":"patroni"}}},{"name":"PATRONI_SCOPE","value":"patroni"},{"name":"PATRONI_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"PATRONI_LOG_LEVEL","value":"WARNING"},{"name":"PATRONI_POSTGRESQL_DATA_DIR","value":"/home/postgres/pgdata/pgroot/data"},{"name":"PATRONI_POSTGRESQL_PGPASS","value":"/tmp/pgpass"},{"name":"PATRONI_POSTGRESQL_LISTEN","value":"0.0.0.0:5432"},{"name":"PATRONI_RESTAPI_LISTEN","value":"0.0.0.0:8008"}],"image":"docker-registry.default.svc:5000/s4g19x-poornima-sivanand-openshift201-may2019-tools/patroni:v10-dev","imagePullPolicy":"Always","name":"postgresql","ports":[{"containerPort":8008,"protocol":"TCP"},{"containerPort":5432,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/usr/share/scripts/patroni/health_check.sh"]},"failureThreshold":4,"initialDelaySeconds":5,"timeoutSeconds":5},"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/home/postgres/pgdata","name":"postgresql"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccountName":"patroni","terminationGracePeriodSeconds":0}},"updateStrategy":{"type":"RollingUpdate"},"volumeClaimTemplates":[{"metadata":{"annotations":{"volume.beta.kubernetes.io/storage-class":"gluster-block"},"labels":{"app":"patroni"},"name":"postgresql"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}},"storageClassName":"gluster-block"}}]}}
    creationTimestamp: 2019-05-28T21:41:49Z
    generation: 1
    labels:
      app: patroni
      app.kubernetes.io/component: database
      app.kubernetes.io/instance: patroni
      app.kubernetes.io/managed-by: template
      app.kubernetes.io/name: patroni
      app.kubernetes.io/version: "10"
      cluster-name: patroni
      phase: deploy
    name: patroni
    namespace: s4g19x-poornima-sivanand-openshift201-may2019-dev
    resourceVersion: "796725102"
    selfLink: /apis/apps/v1/namespaces/s4g19x-poornima-sivanand-openshift201-may2019-dev/statefulsets/patroni
    uid: 661b178e-8191-11e9-bf26-0050568379a2
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        statefulset: patroni
    serviceName: patroni
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: patroni
          cluster-name: patroni
          statefulset: patroni
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: statefulset
                  operator: In
                  values:
                  - patroni
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: PATRONI_KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: PATRONI_KUBERNETES_LABELS
            value: '{"cluster-name": "patroni", "app.kubernetes.io/name": "patroni"}'
          - name: PATRONI_SUPERUSER_USERNAME
            valueFrom:
              secretKeyRef:
                key: superuser-username
                name: patroni
          - name: PATRONI_SUPERUSER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: superuser-password
                name: patroni
          - name: PATRONI_REPLICATION_USERNAME
            valueFrom:
              secretKeyRef:
                key: replication-username
                name: patroni
          - name: PATRONI_REPLICATION_PASSWORD
            valueFrom:
              secretKeyRef:
                key: replication-password
                name: patroni
          - name: APP_USER
            valueFrom:
              secretKeyRef:
                key: app-db-username
                name: patroni
          - name: APP_PASSWORD
            valueFrom:
              secretKeyRef:
                key: app-db-password
                name: patroni
          - name: APP_DATABASE
            valueFrom:
              secretKeyRef:
                key: app-db-name
                name: patroni
          - name: PATRONI_SCOPE
            value: patroni
          - name: PATRONI_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: PATRONI_LOG_LEVEL
            value: WARNING
          - name: PATRONI_POSTGRESQL_DATA_DIR
            value: /home/postgres/pgdata/pgroot/data
          - name: PATRONI_POSTGRESQL_PGPASS
            value: /tmp/pgpass
          - name: PATRONI_POSTGRESQL_LISTEN
            value: 0.0.0.0:5432
          - name: PATRONI_RESTAPI_LISTEN
            value: 0.0.0.0:8008
          image: docker-registry.default.svc:5000/s4g19x-poornima-sivanand-openshift201-may2019-tools/patroni:v10-dev
          imagePullPolicy: Always
          name: postgresql
          ports:
          - containerPort: 8008
            protocol: TCP
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/share/scripts/patroni/health_check.sh
            failureThreshold: 4
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /home/postgres/pgdata
            name: postgresql
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: patroni
        serviceAccountName: patroni
        terminationGracePeriodSeconds: 0
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: gluster-block
        creationTimestamp: null
        labels:
          app: patroni
        name: postgresql
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: gluster-block
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 3
    currentRevision: patroni-78c4ff9bf4
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: patroni-78c4ff9bf4
    updatedReplicas: 3
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
